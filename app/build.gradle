apply plugin: 'com.android.application'
//定义时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    signingConfigs {
        config {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }
    compileSdkVersion 26
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '26.0.2'

    // 批量打包
//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                //输出apk名称为：WanAndroid_渠道名_版本名_时间.apk
//                def fileName = "WanAndroid_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}.apk"
//                outputFileName = fileName
//            }
//        }
//    }
//
//    flavorDimensions "default"
//
//    productFlavors {
//        yingyongbao {}
//        xiaomi {}
//        _360 {}
//        baidu {}
//        wandoujia {}
//    }
//
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["cardview"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["recyclerview"]
    compile rootProject.ext.dependencies["preference"]
    compile rootProject.ext.dependencies["retrofit2"]
    compile rootProject.ext.dependencies["converter-scalars"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava2"]
    compile rootProject.ext.dependencies["rxlifecycle2"]
    compile rootProject.ext.dependencies["rxlifecomponents"]
    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxbinding2"]
    compile rootProject.ext.dependencies["constraint-layout"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["BaseAdapterHelper"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["banner"]
    compile rootProject.ext.dependencies["circleimageview"]
    compile rootProject.ext.dependencies["utilcode"]
    compile rootProject.ext.dependencies["agentweb"]
    compile rootProject.ext.dependencies["flowlayout"]
    compile rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    compile rootProject.ext.dependencies["umeng-common"]
    compile rootProject.ext.dependencies["umeng-analytics"]
    annotationProcessor rootProject.ext.dependencies["dbflow-processor"]
    compile rootProject.ext.dependencies["dbflow-core"]
    compile rootProject.ext.dependencies["dbflow"]
    compile rootProject.ext.dependencies["dbflow-sqlcipher"]
    testCompile 'junit:junit:4.12'
}
repositories {
    mavenCentral()
}
